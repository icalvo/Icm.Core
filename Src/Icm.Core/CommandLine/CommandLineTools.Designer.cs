
using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace My.Resources
{

	//This class was auto-generated by the StronglyTypedResourceBuilder
	//class via a tool like ResGen or Visual Studio.
	//To add or remove a member, edit your .ResX file then rerun ResGen
	//with the /str option, or rebuild your VS project.
	///<summary>
	///  A strongly-typed resource class, for looking up localized strings, etc.
	///</summary>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0"), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	internal class CommandLineTools
	{


		private static global::System.Resources.ResourceManager resourceMan;

		private static global::System.Globalization.CultureInfo resourceCulture;
		[System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
		internal CommandLineTools() : base()
		{
		}

		///<summary>
		///  Returns the cached ResourceManager instance used by this class.
		///</summary>
		[System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		static internal global::System.Resources.ResourceManager ResourceManager {
			get {
				if (object.ReferenceEquals(resourceMan, null)) {
					global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CommandLineTools", typeof(CommandLineTools).Assembly);
					resourceMan = temp;
				}
				return resourceMan;
			}
		}

		///<summary>
		///  Overrides the current thread's CurrentUICulture property for all
		///  resource lookups using this strongly typed resource class.
		///</summary>
		[System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
		static internal global::System.Globalization.CultureInfo Culture {
			get { return resourceCulture; }
			set { resourceCulture = value; }
		}

		///<summary>
		///  Looks up a localized string similar to This will print help.
		///</summary>
		static internal string S_DEFAULT_HELP_DESC {
			get { return ResourceManager.GetString("S_DEFAULT_HELP_DESC", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to help.
		///</summary>
		static internal string S_DEFAULT_HELP_LONG {
			get { return ResourceManager.GetString("S_DEFAULT_HELP_LONG", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to h.
		///</summary>
		static internal string S_DEFAULT_HELP_SHORT {
			get { return ResourceManager.GetString("S_DEFAULT_HELP_SHORT", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to This will omit ouput except errors.
		///</summary>
		static internal string S_DEFAULT_VERBOSE_DESC {
			get { return ResourceManager.GetString("S_DEFAULT_VERBOSE_DESC", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to quiet.
		///</summary>
		static internal string S_DEFAULT_VERBOSE_LONG {
			get { return ResourceManager.GetString("S_DEFAULT_VERBOSE_LONG", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to q.
		///</summary>
		static internal string S_DEFAULT_VERBOSE_SHORT {
			get { return ResourceManager.GetString("S_DEFAULT_VERBOSE_SHORT", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to --{0} (-{1}) is required.
		///</summary>
		static internal string S_ERR_ARG_REQUIRED {
			get { return ResourceManager.GetString("S_ERR_ARG_REQUIRED", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to This command does not ask for main arguments.
		///</summary>
		static internal string S_ERR_ARGS_WHEN_NOARGS {
			get { return ResourceManager.GetString("S_ERR_ARGS_WHEN_NOARGS", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Empty short option (as in - ). To separate main arguments use --..
		///</summary>
		static internal string S_ERR_EMPTY_SHORT_OPTION {
			get { return ResourceManager.GetString("S_ERR_EMPTY_SHORT_OPTION", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to &quot;Long&quot; short option (as in -myopt ).
		///</summary>
		static internal string S_ERR_LONG_SHORT_OPTION {
			get { return ResourceManager.GetString("S_ERR_LONG_SHORT_OPTION", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to This command requires main arguments.
		///</summary>
		static internal string S_ERR_NOARGS_WHEN_REQUIRED {
			get { return ResourceManager.GetString("S_ERR_NOARGS_WHEN_REQUIRED", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Non-optional argument ({0}) not admitted when the last one ({1}) is already optional.
		///</summary>
		static internal string S_ERR_NON_OPTIONAL_AFTER_OPTIONAL {
			get { return ResourceManager.GetString("S_ERR_NON_OPTIONAL_AFTER_OPTIONAL", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Not enough subarguments given for option --{0}.
		///</summary>
		static internal string S_ERR_NOT_ENOUGH_SUBARGS {
			get { return ResourceManager.GetString("S_ERR_NOT_ENOUGH_SUBARGS", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to This option doesn&apos;t exist.
		///</summary>
		static internal string S_ERR_OPTION_NOT_EXIST {
			get { return ResourceManager.GetString("S_ERR_OPTION_NOT_EXIST", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to You must provide names for all the required unnamed arguments.
		///</summary>
		static internal string S_ERR_REQUIRED_MAIN_ARGUMENTS_WITHOUT_NAME {
			get { return ResourceManager.GetString("S_ERR_REQUIRED_MAIN_ARGUMENTS_WITHOUT_NAME", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to &quot;Short&quot; long option (as in --o ).
		///</summary>
		static internal string S_ERR_SHORT_LONG_OPTION {
			get { return ResourceManager.GetString("S_ERR_SHORT_LONG_OPTION", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Short parameter name ({0}) must be shorter than long parameter name ({1}).
		///</summary>
		static internal string S_ERR_SHORT_LONGER_THAN_LONG {
			get { return ResourceManager.GetString("S_ERR_SHORT_LONGER_THAN_LONG", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to No subarguments admitted when the last one is of type List.
		///</summary>
		static internal string S_ERR_SUBARG_AFTER_LIST {
			get { return ResourceManager.GetString("S_ERR_SUBARG_AFTER_LIST", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Too many subarguments given for option --{0}.
		///</summary>
		static internal string S_ERR_TOO_MANY_SUBARGS {
			get { return ResourceManager.GetString("S_ERR_TOO_MANY_SUBARGS", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Empty subargument.
		///</summary>
		static internal string S_ERR_VOID_SUBARGUMENT {
			get { return ResourceManager.GetString("S_ERR_VOID_SUBARGUMENT", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to REQUIRED. .
		///</summary>
		static internal string S_HELP_REQUIRED {
			get { return ResourceManager.GetString("S_HELP_REQUIRED", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Usage.
		///</summary>
		static internal string S_HELP_USAGE {
			get { return ResourceManager.GetString("S_HELP_USAGE", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Options.
		///</summary>
		static internal string S_OPTIONS {
			get { return ResourceManager.GetString("S_OPTIONS", resourceCulture); }
		}

		///<summary>
		///  Looks up a localized string similar to Subarguments must be separated by spaces..
		///</summary>
		static internal string S_SUBARGUMENTS_SEPARATED {
			get { return ResourceManager.GetString("S_SUBARGUMENTS_SEPARATED", resourceCulture); }
		}
	}
}

//=======================================================
//Service provided by Telerik (www.telerik.com)
//Conversion powered by NRefactory.
//Twitter: @telerik
//Facebook: facebook.com/telerik
//=======================================================
