<Window x:Class="Gekka.Roslyn.TranslateViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:frm="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"
        xmlns:app="clr-namespace:Gekka.Roslyn.TranslateViewer"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" 
        Title="Roslyn C# to VB Translator" Height="600" Width="900" Background="LightGray">
    <Window.Resources>
        <Style TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding Path=IsChecked,ElementName=autoExpand,Mode=OneTime}" x:Name="treeViewDefaultExpand"/>
        </Style>

        <HierarchicalDataTemplate ItemsSource="{Binding Items}" x:Key="itemTemplate">
            <TextBlock Text="{Binding ''}"  x:Name="txb" SnapsToDevicePixels="true" TextOptions.TextFormattingMode="Display" />
            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding ItemType}" Value="Token">
                    <Setter TargetName="txb" Property="Foreground" Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ItemType}" Value="Node">
                    <Setter TargetName="txb" Property="Foreground" Value="Blue" />
                </DataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>
    </Window.Resources>
    
    <Window.Style>
        <Style TargetType="{x:Type app:MainWindow}">
            <Setter Property="InputText" Value="{Binding InputText, Mode=OneWayToSource}" />
            <Setter Property="OutputText" Value="{Binding OutputText, Mode=OneWay}" />
        </Style>
    </Window.Style>
    
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static ApplicationCommands.Open}" 
                        CanExecute="CommandBinding_CanExecute" 
                        Executed="CommandBinding_Executed" />
    </Window.CommandBindings>
    <DockPanel >

        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
            <Button Command="{x:Static ApplicationCommands.Open}" Content="OpenFile"/>
            <TextBlock Text="Convert Start Delay" VerticalAlignment="Center"  Margin="10,0,0,0"/>
            <Slider Minimum="100" Maximum="3000" Width="200" SmallChange="100" 
						Value="{Binding ConvertStartDelay}" x:Name="delay" />
            <TextBlock Text="{Binding Value, ElementName=delay, StringFormat=0000ms}" VerticalAlignment="Center"/>

            <TextBlock Text="FontSize" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <ComboBox x:Name="fontSize" MinWidth="70" SelectedIndex="2">
                <sys:Double>10</sys:Double>
                <sys:Double>12</sys:Double>
                <sys:Double>14</sys:Double>
                <sys:Double>16</sys:Double>
                <sys:Double>18</sys:Double>
                <sys:Double>20</sys:Double>
                <sys:Double>22</sys:Double>
                <sys:Double>24</sys:Double>
                <sys:Double>26</sys:Double>
                <sys:Double>28</sys:Double>
                <sys:Double>30</sys:Double>
            </ComboBox>
        </StackPanel>


        <Grid TextBlock.FontSize="{Binding SelectedValue, ElementName=fontSize}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            
            <StackPanel Orientation="Horizontal" Grid.Column="0" Grid.Row="0" TextBlock.FontSize="15">
                <TextBlock Grid.Column="2" Grid.Row="0" Text="Input Code" VerticalAlignment="Center" />
                <ComboBox ItemsSource="{Binding Languages}" SelectedItem="{Binding InputLanguage}"/>
            </StackPanel>
            <avalon:TextEditor x:Name="input" Grid.Column="0" Grid.Row="1" SyntaxHighlighting="C#" TextChanged="input_TextChanged" Padding="5"/>
            
            <GridSplitter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" ResizeDirection="Columns"
				ResizeBehavior="PreviousAndNext" Width="5" VerticalAlignment="Stretch"/>

            <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal">
                <TextBlock Text="Input Tree" TextBlock.FontSize="15" VerticalAlignment="Center"/>
                <CheckBox Content="Auto Expand" VerticalAlignment="Center" Margin="10,0,0,0" x:Name="autoExpand"/>
            </StackPanel>
            
            <Grid Grid.Column="2" Grid.Row="1" >
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TreeView Grid.Row="0" ItemsSource="{Binding Result.Items}" SelectedItemChanged="TreeView_SelectedItemChanged"   
                          ItemTemplate="{StaticResource ResourceKey=itemTemplate}" />

                <GridSplitter Grid.Row="1" Grid.RowSpan="1" ResizeDirection="Rows" 
					ResizeBehavior="PreviousAndNext" Height="5" HorizontalAlignment="Stretch"/>

                <WindowsFormsHost Grid.Row="2">
                    <frm:PropertyGrid x:Name="pg" ToolbarVisible="false" PropertySort="Alphabetical"/>
                </WindowsFormsHost>
            </Grid>
            
            <GridSplitter Grid.Column="3" Grid.Row="1" Grid.RowSpan="2" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext" Width="5" VerticalAlignment="Stretch"/>
            
            <TextBlock Grid.Column="4" Grid.Row="0" Text="Output Code(VB.Net)" TextBlock.FontSize="15" VerticalAlignment="Center"/>
            <avalon:TextEditor x:Name="output"  IsReadOnly="true" SyntaxHighlighting="VB" Grid.Column="4" Grid.Row="1" Padding="5"/>

        </Grid>

    </DockPanel>

</Window>
